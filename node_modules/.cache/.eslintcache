[{"/Users/user/BTC/NEW-Green-Field/src/index.tsx":"1","/Users/user/BTC/NEW-Green-Field/src/reportWebVitals.js":"2","/Users/user/BTC/NEW-Green-Field/src/App.tsx":"3","/Users/user/BTC/NEW-Green-Field/src/components/Modal.tsx":"4","/Users/user/BTC/NEW-Green-Field/src/components/Header.tsx":"5","/Users/user/BTC/NEW-Green-Field/src/components/List.tsx":"6","/Users/user/BTC/NEW-Green-Field/src/components/Login.tsx":"7","/Users/user/BTC/NEW-Green-Field/src/components/SignUp.tsx":"8","/Users/user/BTC/soro_project_dig_btc_kikuchi/src/index.tsx":"9","/Users/user/BTC/soro_project_dig_btc_kikuchi/src/App.tsx":"10","/Users/user/BTC/soro_project_dig_btc_kikuchi/src/components/List.tsx":"11","/Users/user/BTC/soro_project_dig_btc_kikuchi/src/components/Add.tsx":"12","/Users/user/BTC/soro_project_dig_btc_kikuchi/src/components/Shop.tsx":"13","/Users/user/BTC/soro_project_dig_btc_kikuchi/src/components/NewCreateShop.tsx":"14","/Users/user/BTC/soro_project_dig_btc_kikuchiのコピー/src/index.tsx":"15","/Users/user/BTC/soro_project_dig_btc_kikuchiのコピー/src/App.tsx":"16","/Users/user/BTC/soro_project_dig_btc_kikuchiのコピー/src/components/NewCreateShop.tsx":"17","/Users/user/BTC/soro_project_dig_btc_kikuchiのコピー/src/components/Add.tsx":"18","/Users/user/BTC/soro_project_dig_btc_kikuchiのコピー/src/components/List.tsx":"19","/Users/user/BTC/soro_project_dig_btc_kikuchiのコピー/src/components/ShopSort.tsx":"20"},{"size":255,"mtime":1685672467201,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1685598491110,"results":"23","hashOfConfig":"22"},{"size":1631,"mtime":1685803604884,"results":"24","hashOfConfig":"22"},{"size":2805,"mtime":1685798366133,"results":"25","hashOfConfig":"22"},{"size":3448,"mtime":1685802817041,"results":"26","hashOfConfig":"22"},{"size":1607,"mtime":1685803634270,"results":"27","hashOfConfig":"22"},{"size":2649,"mtime":1685803748918,"results":"28","hashOfConfig":"22"},{"size":4983,"mtime":1685802937826,"results":"29","hashOfConfig":"22"},{"size":255,"mtime":1685672467201,"results":"30","hashOfConfig":"31"},{"size":2489,"mtime":1686283018296,"results":"32","hashOfConfig":"31"},{"size":5836,"mtime":1686283018297,"results":"33","hashOfConfig":"31"},{"size":2839,"mtime":1686278875938,"results":"34","hashOfConfig":"31"},{"size":1035,"mtime":1686278591661,"results":"35","hashOfConfig":"31"},{"size":4160,"mtime":1686281276111,"results":"36","hashOfConfig":"31"},{"size":255,"mtime":1685672467201,"results":"37","hashOfConfig":"38"},{"size":2234,"mtime":1686354930149,"results":"39","hashOfConfig":"38"},{"size":4027,"mtime":1686350255316,"results":"40","hashOfConfig":"38"},{"size":2803,"mtime":1686347917889,"results":"41","hashOfConfig":"38"},{"size":5688,"mtime":1686350185772,"results":"42","hashOfConfig":"38"},{"size":904,"mtime":1686350309452,"results":"43","hashOfConfig":"38"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"9ydm3b",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"q8ffz8",{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u546j7",{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/user/BTC/NEW-Green-Field/src/index.tsx",[],[],[],"/Users/user/BTC/NEW-Green-Field/src/reportWebVitals.js",[],[],"/Users/user/BTC/NEW-Green-Field/src/App.tsx",[],[],"/Users/user/BTC/NEW-Green-Field/src/components/Modal.tsx",[],[],"/Users/user/BTC/NEW-Green-Field/src/components/Header.tsx",["110"],[],"/Users/user/BTC/NEW-Green-Field/src/components/List.tsx",[],[],"/Users/user/BTC/NEW-Green-Field/src/components/Login.tsx",[],[],"/Users/user/BTC/NEW-Green-Field/src/components/SignUp.tsx",[],[],"/Users/user/BTC/soro_project_dig_btc_kikuchi/src/index.tsx",[],[],[],"/Users/user/BTC/soro_project_dig_btc_kikuchi/src/App.tsx",[],[],"/Users/user/BTC/soro_project_dig_btc_kikuchi/src/components/List.tsx",["111","112","113","114","115","116","117"],[],"import React, { useContext } from \"react\";\nimport \"./List.css\";\nimport { VariableContext } from \"../App\";\n\nconst fetchURL =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://kjk.onrender.com\"\n    : \"http://localhost:3333\";\nconst List = () => {\n  const [\n    ,\n    ,\n    lists,\n    setLists,\n    userData,\n    setUserData,\n    shop,\n    setShop,\n    shopTable,\n    setShopTable,\n    items,\n    setItems,\n  ] = useContext(VariableContext);\n\n  const handleRemoveItem = (uniquKey: any) => {\n    const getData = async () => {\n      const response = await fetch(`${fetchURL}/lists/del/${uniquKey}`).then(\n        (e) => e.json()\n      );\n    };\n    getData();\n    const newLists = lists.filter(\n      (list: { uniquKey: any }) => list.uniquKey !== uniquKey\n    );\n    setLists(newLists);\n  };\n\n  const handleCompletedItem = (uniquKey: any) => {\n    const newLists = [...lists];\n    const list = newLists.find((list) => list.uniquKey === uniquKey);\n    list.isCompleted = !list.isCompleted;\n    setLists(newLists);\n  };\n\n  const handleUpdateItem = (\n    e:\n      | React.ChangeEvent<HTMLInputElement>\n      | React.ChangeEvent<HTMLSelectElement>,\n    uniquKey: any\n  ) => {\n    const { name, value } = e.target;\n    const newLists = lists.map(\n      (list: { [x: string]: string }, itemIndex: any) => {\n        if (list.uniquKey === uniquKey) {\n          console.log(name, value);\n          list[name] = value;\n        }\n        return list;\n      }\n    );\n    setLists(newLists);\n  };\n\n  //売り場付与\n  const cornerAdd = () => {\n    lists.map((list: any) => {\n      for (const e of items) {\n        if (e[\"item_name\"] === list[\"item\"]) {\n          list[\"corner_name\"] = e[\"corner_name\"];\n        }\n      }\n      return list;\n    });\n    console.log(\"lists:\", lists);\n  };\n  cornerAdd();\n\n  //順番付与\n  const directionAdd = () => {\n    console.log(\"shopTable\", shopTable);\n\n    console.log(shop);\n    lists.map((list: any) => {\n      for (const e of shopTable) {\n        if (\n          e[\"shop_name\"] === shop &&\n          e[\"corner_name\"] === list[\"corner_name\"]\n        ) {\n          list[\"directions\"] = e[\"directions\"];\n        }\n      }\n      return list;\n    });\n    console.log(\"lists:\", lists);\n  };\n  directionAdd();\n  //ソート\n  const sortedList = lists.sort(function (\n    a: { directions: number },\n    b: { directions: number }\n  ) {\n    if (a.directions > b.directions) return 1;\n    if (b.directions > a.directions) return -1;\n    return 0;\n  });\n  console.log(\"sortedList:\", sortedList);\n\n  //更新\n  const handleSubmit = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    const getData = async () => {\n      const response = await fetch(fetchURL + \"/lists/put\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(lists),\n      }).then((e) => e.json());\n    };\n    getData();\n  };\n\n  return (\n    <form className=\"content\" onSubmit={handleSubmit}>\n      <ul className=\"shoppingColum\">\n        <li>買う物</li>\n        <li>量</li>\n        <li>売り場</li>\n        <li>順番</li>\n        <button>保存</button>\n      </ul>\n      <ul className=\"topic\">\n        {lists.map((list: any) => (\n          <li key={list.uniquKey} className=\"formData\">\n            <input\n              type=\"checkbox\"\n              checked={list.isCompleted}\n              onChange={() => handleCompletedItem(list.uniquKey)}\n            />\n            <input\n              name=\"item\"\n              type=\"text\"\n              disabled={list.isCompleted}\n              value={`${list.item}`}\n              onChange={(e) => handleUpdateItem(e, list.uniquKey)}\n            />\n            <input\n              name=\"quantity\"\n              type=\"number\"\n              disabled={list.isCompleted}\n              min={0}\n              value={`${list.quantity}`}\n              onChange={(e) => handleUpdateItem(e, list.uniquKey)}\n            />\n            <select\n              className=\"select1\"\n              name=\"quantity_unit\"\n              disabled={list.isCompleted}\n              value={`${list.quantity_unit}`}\n              onChange={(e) => handleUpdateItem(e, list.uniquKey)}\n            >\n              <option value=\"個/本/玉\">個/本/玉</option>\n              <option value=\"パック/袋/缶\">パック/袋/缶</option>\n              <option value=\"L\">L</option>\n              <option value=\"Kg\">Kg</option>\n            </select>\n            <select\n              className=\"select2\"\n              name=\"corner_name\"\n              disabled={list.isCompleted}\n              value={`${list.corner_name}`}\n              onChange={(e) => handleUpdateItem(e, list.uniquKey)}\n            >\n              <option value=\"選択してください\">選択してください</option>\n              <option value=\"野菜\">野菜</option>\n              <option value=\"肉\">肉</option>\n              <option value=\"魚\">魚</option>\n              <option value=\"乳製品\">乳製品</option>\n              <option value=\"冷凍\">冷凍</option>\n              <option value=\"パン\">パン</option>\n              <option value=\"惣菜\">惣菜</option>\n              <option value=\"お菓子\">お菓子</option>\n              <option value=\"文房具\">文房具</option>\n              <option value=\"その他\">その他</option>\n            </select>\n            <input\n              className=\"directions\"\n              name=\"directions\"\n              type=\"number\"\n              disabled={list.isCompleted}\n              min={0}\n              value={`${list.directions}`}\n              onChange={(e) => handleUpdateItem(e, list.uniquKey)}\n            />\n            <button onClick={(e) => handleRemoveItem(list.uniquKey)}>\n              削除\n            </button>\n          </li>\n        ))}\n      </ul>\n    </form>\n  );\n};\n\nexport default List;\n","/Users/user/BTC/soro_project_dig_btc_kikuchi/src/components/Add.tsx",["118","119","120","121"],[],"import React, { useContext, useEffect, useState } from \"react\";\nimport { VariableContext } from \"../App\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst fetchURL =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://kjk.onrender.com\"\n    : \"http://localhost:3333\";\n\nexport const Add = () => {\n  const [inputNewItem, setInputNewItem] = useState({\n    item: \"\",\n    quantity: 1,\n    quantity_unit: \"個/本/玉\",\n  });\n  const [, , lists, setLists, , , shop, setShop] = useContext(VariableContext);\n  const [submitFlag, setSubmitFlag] = useState(false);\n\n  const handleChange = (\n    e:\n      | React.ChangeEvent<HTMLInputElement>\n      | React.ChangeEvent<HTMLSelectElement>\n  ) => {\n    const { name, value } = e.target;\n    setInputNewItem({ ...inputNewItem, [name]: value });\n  };\n\n  const handleSubmit = (e: { preventDefault: () => void }) => {\n    //ページのリロード処理を無効化\n    e.preventDefault();\n    if (!inputNewItem) return;\n    setLists((lists: any) => [\n      ...lists,\n      {\n        uniquKey: uuidv4(),\n        item: inputNewItem.item,\n        isCompleted: false,\n        corner_name: \"選択してください\",\n        directions: 1,\n        quantity: inputNewItem.quantity,\n        quantity_unit: inputNewItem[\"quantity_unit\"],\n      },\n    ]);\n    setInputNewItem({\n      item: \"\",\n      quantity: 1,\n      quantity_unit: \"個/本/玉\",\n    });\n  };\n  //登録\n  useEffect(() => {\n    const getData = async () => {\n      const response = await fetch(fetchURL + \"/lists\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(lists.slice(-1)[0]),\n      }).then((e) => e.json());\n    };\n    if (submitFlag) {\n      getData();\n      setSubmitFlag(false);\n    }\n  }, [lists]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} id=\"add\">\n        <input\n          type=\"text\"\n          name=\"item\"\n          value={inputNewItem[\"item\"]}\n          placeholder=\"新しく買う物\"\n          onChange={(e) => handleChange(e)}\n          required\n        />\n        <label>量：</label>\n        <input\n          name=\"quantity\"\n          type=\"number\"\n          min={0}\n          value={inputNewItem[\"quantity\"]}\n          placeholder=\"量\"\n          onChange={(e) => handleChange(e)}\n          required\n        />\n\n        <label htmlFor=\"単位\">単位：</label>\n        <select\n          form=\"add\"\n          name=\"quantity_unit\"\n          onChange={(e) => handleChange(e)}\n        >\n          <option value=\"個/本/玉\">個/本/玉</option>\n          <option value=\"パック/袋/缶\">パック/袋/缶</option>\n          <option value=\"L\">L</option>\n          <option value=\"Kg\">Kg</option>\n        </select>\n        <button type=\"submit\" onClick={() => setSubmitFlag(true)}>\n          追加!\n        </button>\n      </form>\n    </>\n  );\n};\n","/Users/user/BTC/soro_project_dig_btc_kikuchi/src/components/Shop.tsx",["122","123","124","125","126","127","128","129","130"],[],"import React, { useContext, useEffect } from \"react\";\nimport { VariableContext } from \"../App\";\nexport const ShopSort = () => {\n  const [\n    ,\n    setNewCreateFlag,\n    lists,\n    setLists,\n    userData,\n    setUserData,\n    shop,\n    setShop,\n    shopTable,\n    setShopTable,\n    items,\n    setItems,\n  ] = useContext(VariableContext);\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = e.target;\n    setShop(value);\n  };\n  const shopName = Array.from(\n    new Set(shopTable.map((e: { shop_name: any }) => e.shop_name))\n  );\n\n  return (\n    <div>\n      <label htmlFor=\"買うお店\">買うお店：</label>\n      <select name=\"shopList\" id=\"shopList\" onChange={(e) => handleChange(e)}>\n        <option value=\"選択してください\">選択してください</option>\n        {shopName.map((e, index) => (\n          <option key={index} value={`${e}`}>{`${e}`}</option>\n        ))}\n      </select>\n      <button onClick={() => setNewCreateFlag(true)}>お店追加</button>\n    </div>\n  );\n};\n","/Users/user/BTC/soro_project_dig_btc_kikuchi/src/components/NewCreateShop.tsx",["131","132","133","134","135","136","137","138","139"],[],"import React, { useContext, useEffect, useState } from \"react\";\nimport { VariableContext } from \"../App\";\nimport \"./NewCreateShop.css\";\nconst fetchURL =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://kjk.onrender.com\"\n    : \"http://localhost:3333\";\n\nexport const NewCreateShop = () => {\n  const [\n    newCreateFlag,\n    setNewCreateFlag,\n    ,\n    ,\n    userData,\n    setUserData,\n    shop,\n    setShop,\n    shopTable,\n    setShopTable,\n    items,\n    setItems,\n  ] = useContext(VariableContext);\n\n  const [input, setInput] = useState(\"\");\n  const [tem, setTem] = useState([\n    { shop_name: \"\", corner_name: \"野菜\", directions: 1 },\n    { shop_name: \"\", corner_name: \"肉\", directions: 2 },\n    { shop_name: \"\", corner_name: \"魚\", directions: 3 },\n    { shop_name: \"\", corner_name: \"乳製品\", directions: 4 },\n    { shop_name: \"\", corner_name: \"冷凍\", directions: 5 },\n    { shop_name: \"\", corner_name: \"パン\", directions: 6 },\n    { shop_name: \"\", corner_name: \"惣菜\", directions: 7 },\n    { shop_name: \"\", corner_name: \"お菓子\", directions: 8 },\n    { shop_name: \"\", corner_name: \"文房具\", directions: 9 },\n    { shop_name: \"\", corner_name: \"その他\", directions: 10 },\n  ]);\n\n  const handleUpdateItem = (e: any, index: any) => {\n    const { name, value } = e.target;\n    const newLists = tem.map((row: any, itemIndex) => {\n      if (itemIndex === index) {\n        console.log(name, value);\n        row[name] = value;\n      }\n      return row;\n    });\n    setTem(newLists);\n  };\n  const handleInput = (e: any) => {\n    setInput(e.target.value);\n  };\n  //入力\n  tem.map((row) => {\n    row[\"shop_name\"] = input;\n    return row;\n  });\n  //ソート\n  tem.sort(function (a: { directions: number }, b: { directions: number }) {\n    if (a.directions > b.directions) return 1;\n    if (b.directions > a.directions) return -1;\n    return 0;\n  });\n  //登録\n  const handleSubmit = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    const getData = async () => {\n      const response = await fetch(fetchURL + \"/shops\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(tem),\n      }).then((e) => e.json());\n      setShopTable(response);\n    };\n    getData();\n    setNewCreateFlag(false);\n  };\n  return (\n    <>\n      <button onClick={() => setNewCreateFlag(false)}>戻る</button>\n      <form className=\"content\" onSubmit={handleSubmit}>\n        <ul className=\"shoppingColum\">\n          <li>お店</li>\n          <li>売り場</li>\n          <li>順番</li>\n          <label id=\"label\" htmlFor=\"登録するお店\">\n            登録するお店\n          </label>\n          <input\n            id=\"input1\"\n            name=\"shop_name\"\n            type=\"text\"\n            onChange={(e) => {\n              handleInput(e);\n            }}\n          />\n          <button>登録</button>\n        </ul>\n        <ul className=\"topic\">\n          {tem.map((row: any, index: number) => (\n            <li key={index} className=\"formData\">\n              <input\n                id=\"input2\"\n                name=\"shop_name\"\n                type=\"text\"\n                value={`${row.shop_name}`}\n                disabled\n              />\n              <input\n                id=\"input3\"\n                name=\"corner_name\"\n                value={`${row.corner_name}`}\n                disabled\n              ></input>\n              <select\n                id=\"input4\"\n                name=\"directions\"\n                value={`${row.directions}`}\n                onChange={(e) => handleUpdateItem(e, index)}\n              >\n                <option value={1}>1</option>\n                <option value={2}>2</option>\n                <option value={3}>3</option>\n                <option value={4}>4</option>\n                <option value={5}>5</option>\n                <option value={6}>6</option>\n                <option value={7}>7</option>\n                <option value={8}>8</option>\n                <option value={9}>9</option>\n                <option value={10}>10</option>\n              </select>\n            </li>\n          ))}\n        </ul>\n      </form>\n    </>\n  );\n};\n","/Users/user/BTC/soro_project_dig_btc_kikuchiのコピー/src/index.tsx",[],[],"/Users/user/BTC/soro_project_dig_btc_kikuchiのコピー/src/App.tsx",[],[],"/Users/user/BTC/soro_project_dig_btc_kikuchiのコピー/src/components/NewCreateShop.tsx",[],[],"/Users/user/BTC/soro_project_dig_btc_kikuchiのコピー/src/components/Add.tsx",["140"],[],"/Users/user/BTC/soro_project_dig_btc_kikuchiのコピー/src/components/List.tsx",[],[],"/Users/user/BTC/soro_project_dig_btc_kikuchiのコピー/src/components/ShopSort.tsx",[],[],{"ruleId":"141","severity":1,"message":"142","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":34},{"ruleId":"141","severity":1,"message":"145","line":15,"column":5,"nodeType":"143","messageId":"144","endLine":15,"endColumn":13},{"ruleId":"141","severity":1,"message":"146","line":16,"column":5,"nodeType":"143","messageId":"144","endLine":16,"endColumn":16},{"ruleId":"141","severity":1,"message":"147","line":18,"column":5,"nodeType":"143","messageId":"144","endLine":18,"endColumn":12},{"ruleId":"141","severity":1,"message":"148","line":20,"column":5,"nodeType":"143","messageId":"144","endLine":20,"endColumn":17},{"ruleId":"141","severity":1,"message":"149","line":22,"column":5,"nodeType":"143","messageId":"144","endLine":22,"endColumn":13},{"ruleId":"141","severity":1,"message":"150","line":27,"column":13,"nodeType":"143","messageId":"144","endLine":27,"endColumn":21},{"ruleId":"141","severity":1,"message":"150","line":112,"column":13,"nodeType":"143","messageId":"144","endLine":112,"endColumn":21},{"ruleId":"141","severity":1,"message":"151","line":16,"column":35,"nodeType":"143","messageId":"144","endLine":16,"endColumn":39},{"ruleId":"141","severity":1,"message":"147","line":16,"column":41,"nodeType":"143","messageId":"144","endLine":16,"endColumn":48},{"ruleId":"141","severity":1,"message":"150","line":53,"column":13,"nodeType":"143","messageId":"144","endLine":53,"endColumn":21},{"ruleId":"152","severity":1,"message":"153","line":63,"column":6,"nodeType":"154","endLine":63,"endColumn":13,"suggestions":"155"},{"ruleId":"141","severity":1,"message":"156","line":1,"column":29,"nodeType":"143","messageId":"144","endLine":1,"endColumn":38},{"ruleId":"141","severity":1,"message":"157","line":7,"column":5,"nodeType":"143","messageId":"144","endLine":7,"endColumn":10},{"ruleId":"141","severity":1,"message":"158","line":8,"column":5,"nodeType":"143","messageId":"144","endLine":8,"endColumn":13},{"ruleId":"141","severity":1,"message":"145","line":9,"column":5,"nodeType":"143","messageId":"144","endLine":9,"endColumn":13},{"ruleId":"141","severity":1,"message":"146","line":10,"column":5,"nodeType":"143","messageId":"144","endLine":10,"endColumn":16},{"ruleId":"141","severity":1,"message":"151","line":11,"column":5,"nodeType":"143","messageId":"144","endLine":11,"endColumn":9},{"ruleId":"141","severity":1,"message":"148","line":14,"column":5,"nodeType":"143","messageId":"144","endLine":14,"endColumn":17},{"ruleId":"141","severity":1,"message":"159","line":15,"column":5,"nodeType":"143","messageId":"144","endLine":15,"endColumn":10},{"ruleId":"141","severity":1,"message":"149","line":16,"column":5,"nodeType":"143","messageId":"144","endLine":16,"endColumn":13},{"ruleId":"141","severity":1,"message":"156","line":1,"column":29,"nodeType":"143","messageId":"144","endLine":1,"endColumn":38},{"ruleId":"141","severity":1,"message":"160","line":11,"column":5,"nodeType":"143","messageId":"144","endLine":11,"endColumn":18},{"ruleId":"141","severity":1,"message":"145","line":15,"column":5,"nodeType":"143","messageId":"144","endLine":15,"endColumn":13},{"ruleId":"141","severity":1,"message":"146","line":16,"column":5,"nodeType":"143","messageId":"144","endLine":16,"endColumn":16},{"ruleId":"141","severity":1,"message":"151","line":17,"column":5,"nodeType":"143","messageId":"144","endLine":17,"endColumn":9},{"ruleId":"141","severity":1,"message":"147","line":18,"column":5,"nodeType":"143","messageId":"144","endLine":18,"endColumn":12},{"ruleId":"141","severity":1,"message":"161","line":19,"column":5,"nodeType":"143","messageId":"144","endLine":19,"endColumn":14},{"ruleId":"141","severity":1,"message":"159","line":21,"column":5,"nodeType":"143","messageId":"144","endLine":21,"endColumn":10},{"ruleId":"141","severity":1,"message":"149","line":22,"column":5,"nodeType":"143","messageId":"144","endLine":22,"endColumn":13},{"ruleId":"152","severity":1,"message":"153","line":63,"column":6,"nodeType":"154","endLine":63,"endColumn":13,"suggestions":"162"},"@typescript-eslint/no-unused-vars","'MouseEventHandler' is defined but never used.","Identifier","unusedVar","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'setShop' is assigned a value but never used.","'setShopTable' is assigned a value but never used.","'setItems' is assigned a value but never used.","'response' is assigned a value but never used.","'shop' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'submitFlag'. Either include it or remove the dependency array.","ArrayExpression",["163"],"'useEffect' is defined but never used.","'lists' is assigned a value but never used.","'setLists' is assigned a value but never used.","'items' is assigned a value but never used.","'newCreateFlag' is assigned a value but never used.","'shopTable' is assigned a value but never used.",["164"],{"desc":"165","fix":"166"},{"desc":"165","fix":"167"},"Update the dependencies array to be: [lists, submitFlag]",{"range":"168","text":"169"},{"range":"170","text":"169"},[1697,1704],"[lists, submitFlag]",[1661,1668]]