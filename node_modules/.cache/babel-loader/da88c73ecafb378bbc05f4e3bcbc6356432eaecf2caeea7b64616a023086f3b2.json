{"ast":null,"code":"var _jsxFileName = \"/Users/user/BTC/NEW-Green-Field/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport List from \"./components/List\";\nimport Modal from \"./components/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const VariableContext = /*#__PURE__*/React.createContext([false, () => {}, [], () => {}]);\nexport default function App() {\n  _s();\n  const [postedArray, setPostedArray] = useState([{\n    id: 0,\n    title: \"\",\n    \"post-date\": \"\",\n    tag: \"\",\n    url: \"\",\n    pict: \"\",\n    \"p-user-id\": 0\n  }]);\n  const [popup, setPopup] = useState(false);\n  const [userData, setUserData] = useState(\"\");\n  useEffect(() => {\n    const getData = async () => {\n      const data = await fetch(\"http://localhost:3333/posted\").then(e => e.json());\n      setPostedArray(data);\n    };\n    const kako = async () => {\n      return \"dummy\";\n    };\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(VariableContext.Provider, {\n      value: [popup, setPopup, postedArray, setPostedArray],\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [popup && /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          postedArray: postedArray,\n          setPopup: setPopup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"IT/LXNW7OfQRnBHlceH6ZOi8T/w=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Header","List","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","VariableContext","createContext","App","_s","postedArray","setPostedArray","id","title","tag","url","pict","popup","setPopup","userData","setUserData","getData","data","fetch","then","e","json","kako","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user/BTC/NEW-Green-Field/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport List from \"./components/List\";\nimport Modal from \"./components/Modal\";\nimport Login from \"./components/Login\";\n\ntype props = [\n  popup: boolean,\n  setPopup: React.Dispatch<React.SetStateAction<boolean>>,\n  postedArray: {\n    id: number;\n    title: string;\n    \"post-date\": string;\n    tag: string;\n    url: string;\n    pict: string;\n    \"p-user-id\": number;\n  }[],\n  setPostedArray: React.Dispatch<\n    React.SetStateAction<\n      {\n        id: number;\n        title: string;\n        \"post-date\": string;\n        tag: string;\n        url: string;\n        pict: string;\n        \"p-user-id\": number;\n      }[]\n    >\n  >\n];\nexport const VariableContext = React.createContext<props>([\n  false,\n  () => {},\n  [],\n  () => {},\n]);\n\nexport default function App() {\n  const [postedArray, setPostedArray] = useState([\n    {\n      id: 0,\n      title: \"\",\n      \"post-date\": \"\",\n      tag: \"\",\n      url: \"\",\n      pict: \"\",\n      \"p-user-id\": 0,\n    },\n  ]);\n  const [popup, setPopup] = useState(false);\n  const [userData, setUserData] = useState(\"\");\n\n  useEffect(() => {\n    const getData = async () => {\n      const data = await fetch(\"http://localhost:3333/posted\").then((e) =>\n        e.json()\n      );\n      setPostedArray(data);\n    };\n    const kako = async () => {\n      return \"dummy\";\n    };\n    getData();\n  }, []);\n\n  return (\n    <>\n      <VariableContext.Provider\n        value={[popup, setPopup, postedArray, setPostedArray]}\n      >\n        {/* {userData ? (\n          <> */}\n        <Header />\n        <main>\n          {popup && <Modal />}\n          <List postedArray={postedArray} setPopup={setPopup} />\n        </main>\n        {/* </>\n        ) : (\n          <Login userData={userData} setUserData={setUserData} />\n        )} */}\n      </VariableContext.Provider>\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AA6BvC,OAAO,MAAMC,eAAe,gBAAGV,KAAK,CAACW,aAAa,CAAQ,CACxD,KAAK,EACL,MAAM,CAAC,CAAC,EACR,EAAE,EACF,MAAM,CAAC,CAAC,CACT,CAAC;AAEF,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAC7C;IACEc,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,EAAE;IACT,WAAW,EAAE,EAAE;IACfC,GAAG,EAAE,EAAE;IACPC,GAAG,EAAE,EAAE;IACPC,IAAI,EAAE,EAAE;IACR,WAAW,EAAE;EACf,CAAC,CACF,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMwB,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC,CAACC,IAAI,CAAEC,CAAC,IAC9DA,CAAC,CAACC,IAAI,CAAC,CACT,CAAC;MACDf,cAAc,CAACW,IAAI,CAAC;IACtB,CAAC;IACD,MAAMK,IAAI,GAAG,MAAAA,CAAA,KAAY;MACvB,OAAO,OAAO;IAChB,CAAC;IACDN,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,eACEzB,OAAA,CAACG,eAAe,CAACuB,QAAQ;MACvBC,KAAK,EAAE,CAACb,KAAK,EAAEC,QAAQ,EAAER,WAAW,EAAEC,cAAc,CAAE;MAAAiB,QAAA,gBAItDzB,OAAA,CAACJ,MAAM;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACV/B,OAAA;QAAAyB,QAAA,GACGX,KAAK,iBAAId,OAAA,CAACF,KAAK;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnB/B,OAAA,CAACH,IAAI;UAACU,WAAW,EAAEA,WAAY;UAACQ,QAAQ,EAAEA;QAAS;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKiB;EAAC,gBAC3B,CAAC;AAEP;AAACzB,EAAA,CA/CuBD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}