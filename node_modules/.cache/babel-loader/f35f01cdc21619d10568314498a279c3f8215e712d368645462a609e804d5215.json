{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/NEW-Green-Field_BU/src/components/Modal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useRef } from \"react\";\nimport \"./Modal.css\";\nimport { VariableContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Modal() {\n  _s();\n  const [, setPopup,, setPostedArray,, userData] = useContext(VariableContext);\n  const [postData, setPostData] = useState({\n    title: \"\",\n    tag: \"\",\n    url: \"\",\n    comment: \"\"\n  });\n  const htmlRef = useRef(null);\n  const today = new Date();\n  const newPost = async () => {\n    const {\n      comment,\n      ...newData\n    } = {\n      ...postData,\n      \"post-date\": `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, \"0\")}-${String(today.getDate()).padStart(2, \"0\")}`,\n      \"p-user-id\": userData[0][\"user-id\"]\n    };\n    let response = await fetch(`http://localhost:3333/posted`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        posted: newData,\n        comment\n      })\n    }).then(e => e.json());\n    setPostedArray(response);\n    setPopup(false);\n    response = null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popUpBack\",\n    ref: htmlRef,\n    onClick: e => {\n      e.target === htmlRef.current && setPopup(false);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u2728NEW Article\\u2728\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        value: postData.title,\n        onChange: e => setPostData({\n          ...postData,\n          [e.target.name]: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        list: \"tags\",\n        name: \"tag\",\n        placeholder: \"Tag\",\n        value: postData.tag,\n        onChange: e => setPostData({\n          ...postData,\n          [e.target.name]: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"tags\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dummy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dummy2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dummy3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"comment\",\n        placeholder: \"review comment\",\n        onChange: e => setPostData({\n          ...postData,\n          [e.target.name]: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"url\",\n        name: \"url\",\n        placeholder: \"URL\",\n        value: postData.url,\n        onChange: e => setPostData({\n          ...postData,\n          [e.target.name]: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonArea\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: newPost,\n          children: \"POST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setPopup(false);\n          },\n          children: \"CLOSE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n_s(Modal, \"BENeg6CuBu75M360D1Lev64z02U=\");\n_c = Modal;\n;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","useContext","useRef","VariableContext","jsxDEV","_jsxDEV","Modal","_s","setPopup","setPostedArray","userData","postData","setPostData","title","tag","url","comment","htmlRef","today","Date","newPost","newData","getFullYear","String","getMonth","padStart","getDate","response","fetch","method","headers","body","JSON","stringify","posted","then","e","json","className","ref","onClick","target","current","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","value","onChange","required","list","id","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/NEW-Green-Field_BU/src/components/Modal.tsx"],"sourcesContent":["import React, { useState, useContext, useRef } from \"react\";\nimport \"./Modal.css\";\nimport { VariableContext } from \"../App\";\n\nexport default function Modal () {\n    const [, setPopup,, setPostedArray, , userData, ] = useContext(VariableContext);\n    const [postData, setPostData] = useState({title:\"\", tag: \"\", url: \"\", comment: \"\"});\n    const htmlRef = useRef<HTMLDivElement>(null);\n    const today = new Date(); \n\n    const newPost = async () => {\n        const {comment, ...newData} = {\n            ...postData,\n            \"post-date\": `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, \"0\")}-${String(today.getDate()).padStart(2, \"0\")}`,\n            \"p-user-id\": userData[0][\"user-id\"]\n        };\n        let response = await fetch(`http://localhost:3333/posted`, {method: \"POST\", headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({posted:newData,comment})}).then(e=>e.json());\n        setPostedArray(response);\n        setPopup(false);\n        response = null;\n    };\n\n    return (\n      <div className=\"popUpBack\" ref={htmlRef} onClick={(e)=>{(e.target===htmlRef.current) && setPopup(false)}}>\n        <section>\n            <h1>✨NEW Article✨</h1>\n            {/* タイトル */}\n            <input type=\"text\" name=\"title\" placeholder=\"Title\" value={postData.title} onChange={(e:any)=>setPostData({...postData ,[e.target.name]:e.target.value})} required/>\n            {/* タグ */}\n            <input list=\"tags\" name=\"tag\" placeholder=\"Tag\" value={postData.tag} onChange={(e:any)=>setPostData({...postData ,[e.target.name]:e.target.value})}/>\n            <datalist id=\"tags\">\n              <option value=\"dummy\"></option>\n              <option value=\"dummy2\"></option>\n              <option value=\"dummy3\"></option>\n            </datalist>\n            {/* コメント */}\n            <input type=\"text\" name=\"comment\" placeholder=\"review comment\" onChange={(e:any)=>setPostData({...postData ,[e.target.name]:e.target.value})}/>\n            <input type=\"url\" name=\"url\" placeholder=\"URL\" value={postData.url} onChange={(e:any)=>setPostData({...postData ,[e.target.name]:e.target.value})} />\n            {/* ボタン */}\n            <div className=\"buttonArea\">\n              <button onClick={newPost}>POST</button>\n              <button onClick={() => {setPopup(false)}}>CLOSE</button>\n            </div>\n        </section>\n      </div>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}