{"ast":null,"code":"var _jsxFileName = \"/Users/user/BTC/NEW-Green-Field/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport List from \"./components/List\";\nimport Login from \"./components/Login\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const VariableContext = /*#__PURE__*/React.createContext([[], [], () => {}, false, () => {}]);\nfunction App() {\n  _s();\n  // valueは全てのテーブル情報を格納\n  const [value, setValue] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [signUpFlag, setSignUpFlag] = useState(false);\n  useEffect(() => {\n    const getData = async () => {\n      const mainData = await fetch(\"http://localhost:3333/posted\").then(e => e.json());\n      setValue(mainData);\n    };\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(VariableContext.Provider, {\n      value: [value, userData, setUserData, signUpFlag, setSignUpFlag],\n      children: userData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [signUpFlag && /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"A3U8IVgkUiNvHhsBwA2LdyTXPbE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Header","List","Login","React","jsxDEV","_jsxDEV","Fragment","_Fragment","VariableContext","createContext","App","_s","value","setValue","userData","setUserData","signUpFlag","setSignUpFlag","getData","mainData","fetch","then","e","json","children","Provider","fileName","_jsxFileName","lineNumber","columnNumber","SignUp","_c","$RefreshReg$"],"sources":["/Users/user/BTC/NEW-Green-Field/src/App.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport List from \"./components/List\";\nimport Login from \"./components/Login\";\nimport React from \"react\";\n\ntype props = [\n  value: {\n    id: number;\n    title: string;\n    \"post-date\": string;\n    tag: string;\n    url: string;\n    pict: string;\n    \"p-user-id\": number;\n  }[],\n  userData: {\n    \"user-id\": number;\n    \"first-name\": string;\n    \"last-name\": string;\n    password: string;\n  }[],\n  setUserData: React.Dispatch<\n    React.SetStateAction<\n      {\n        \"user-id\": number;\n        \"first-name\": string;\n        \"last-name\": string;\n        password: string;\n      }[]\n    >\n  >,\n  signUpFlag: boolean,\n  setSignUpFlag: React.Dispatch<React.SetStateAction<boolean>>\n];\n\nexport const VariableContext = React.createContext<props>([\n  [],\n  [],\n  () => {},\n  false,\n  () => {},\n]);\n\nfunction App() {\n  // valueは全てのテーブル情報を格納\n  const [value, setValue] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [signUpFlag, setSignUpFlag] = useState(false);\n\n  useEffect(() => {\n    const getData = async () => {\n      const mainData = await fetch(\"http://localhost:3333/posted\").then((e) =>\n        e.json()\n      );\n      setValue(mainData);\n    };\n    getData();\n  }, []);\n\n  return (\n    <>\n      <VariableContext.Provider\n        value={[value, userData, setUserData, signUpFlag, setSignUpFlag]}\n      >\n        {userData ? (\n          <>\n            <Header />\n            <List />\n          </>\n        ) : (\n          <>\n            {signUpFlag && <SignUp />}\n            <Login />\n          </>\n        )}\n      </VariableContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAUC,QAAQ,QAAQ,OAAO;AACnD,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAgC1B,OAAO,MAAMC,eAAe,gBAAGL,KAAK,CAACM,aAAa,CAAQ,CACxD,EAAE,EACF,EAAE,EACF,MAAM,CAAC,CAAC,EACR,KAAK,EACL,MAAM,CAAC,CAAC,CACT,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACd,MAAMoB,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC,CAACC,IAAI,CAAEC,CAAC,IAClEA,CAAC,CAACC,IAAI,CAAC,CACT,CAAC;MACDV,QAAQ,CAACM,QAAQ,CAAC;IACpB,CAAC;IACDD,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eACEnB,OAAA,CAACG,eAAe,CAACiB,QAAQ;MACvBb,KAAK,EAAE,CAACA,KAAK,EAAEE,QAAQ,EAAEC,WAAW,EAAEC,UAAU,EAAEC,aAAa,CAAE;MAAAO,QAAA,EAEhEV,QAAQ,gBACPT,OAAA,CAAAE,SAAA;QAAAiB,QAAA,gBACEnB,OAAA,CAACL,MAAM;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACVxB,OAAA,CAACJ,IAAI;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,eACR,CAAC,gBAEHxB,OAAA,CAAAE,SAAA;QAAAiB,QAAA,GACGR,UAAU,iBAAIX,OAAA,CAACyB,MAAM;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzBxB,OAAA,CAACH,KAAK;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,eACT;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACuB;EAAC,gBAC3B,CAAC;AAEP;AAAClB,EAAA,CAnCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}