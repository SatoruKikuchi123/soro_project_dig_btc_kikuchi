{"ast":null,"code":"var _jsxFileName = \"/Users/user/BTC/NEW-Green-Field/src/components/Modal.tsx\";\nimport React from \"react\";\nimport \"./Modal.css\";\nimport \"../Reset.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = _ref => {\n  let {\n    show,\n    setShow,\n    tagList,\n    inputRef,\n    value,\n    setValue\n  } = _ref;\n  //POSTボタンが押されたら実行\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // yyyy年mm月dd日の形式で表示:2023 06 02\n    const postingYear = String(new Date().getFullYear());\n    const postingMonth = String(new Date().getMonth() + 1).padStart(2, \"0\");\n    const postingDate = String(new Date().getDate()).padStart(2, \"0\");\n    const result = {\n      title: e.target.title.value,\n      postedDate: `${postingYear}-${postingMonth}-${postingDate}`,\n      tag: e.target.tag.value,\n      keyword: e.target.keyword.value,\n      url: e.target.url.value,\n      All: \"\"\n    };\n    const resultAll = `${result.title},${result.tag},${result.keyword},${result.postedDate}`;\n    result.All = resultAll.toLowerCase();\n    //現在のマックスidを取得\n    const maxId = Math.max(...value.map(e => e.id));\n    console.log({\n      maxId\n    });\n    //All: \"aaa,react,dasd,2023-06-02\" keyword: \"dasd\" postedDate: \"2023-06-02\" tag: \"react\" title: \"aaa\" url: \"asda\"\n    console.log(result);\n    const fetchData = await fetch(`http://localhost:8000/send/${maxId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\" //\n      },\n\n      body: JSON.stringify(result)\n    }).then(res => res.json());\n    console.log(\"@@@@@@@@@@@@@\", fetchData);\n    // //バックエンド開放後\n    setValue([...value, ...fetchData]);\n    setShow(false);\n  };\n  if (show) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"Modal_form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"NEW POST\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: inputRef,\n              type: \"text\",\n              name: \"title\",\n              id: \"title\",\n              placeholder: \" Title\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              list: \"list\",\n              name: \"tag\",\n              id: \"tag\",\n              placeholder: \" Tag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n              id: \"list\",\n              children: tagList.map((elem, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: elem\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"keyword\",\n              id: \"keyword\",\n              placeholder: \" Keyword\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"url\",\n              id: \"url\",\n              placeholder: \" URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"POST\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShow(false),\n            children: \"CLOSE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n};\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Modal","_ref","show","setShow","tagList","inputRef","value","setValue","handleSubmit","e","preventDefault","postingYear","String","Date","getFullYear","postingMonth","getMonth","padStart","postingDate","getDate","result","title","target","postedDate","tag","keyword","url","All","resultAll","toLowerCase","maxId","Math","max","map","id","console","log","fetchData","fetch","method","headers","body","JSON","stringify","then","res","json","children","onSubmit","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","name","placeholder","required","list","elem","index","onClick","_c","$RefreshReg$"],"sources":["/Users/user/BTC/NEW-Green-Field/src/components/Modal.tsx"],"sourcesContent":["import React, { useState, MouseEventHandler, RefObject } from \"react\";\nimport \"./Modal.css\";\nimport \"../Reset.css\";\nimport { table } from \"../globals\";\n\ntype Props = {\n  show: boolean;\n  setShow: Function;\n  tagList: string[];\n  inputRef: RefObject<HTMLInputElement>;\n  setValue: Function;\n  value: table[];\n};\n\nconst Modal: React.FC<Props> = ({\n  show,\n  setShow,\n  tagList,\n  inputRef,\n  value,\n  setValue,\n}) => {\n  //POSTボタンが押されたら実行\n  const handleSubmit = async (e: any) => {\n    e.preventDefault();\n\n    // yyyy年mm月dd日の形式で表示:2023 06 02\n    const postingYear = String(new Date().getFullYear());\n    const postingMonth = String(new Date().getMonth() + 1).padStart(2, \"0\");\n    const postingDate = String(new Date().getDate()).padStart(2, \"0\");\n\n    const result = {\n      title: e.target.title.value,\n      postedDate: `${postingYear}-${postingMonth}-${postingDate}`,\n      tag: e.target.tag.value,\n      keyword: e.target.keyword.value,\n      url: e.target.url.value,\n      All: \"\",\n    };\n\n    const resultAll = `${result.title},${result.tag},${result.keyword},${result.postedDate}`;\n    result.All = resultAll.toLowerCase();\n    //現在のマックスidを取得\n    const maxId = Math.max(...value.map((e) => e.id));\n    console.log({ maxId });\n    //All: \"aaa,react,dasd,2023-06-02\" keyword: \"dasd\" postedDate: \"2023-06-02\" tag: \"react\" title: \"aaa\" url: \"asda\"\n    console.log(result);\n    const fetchData = await fetch(`http://localhost:8000/send/${maxId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\", //\n      },\n      body: JSON.stringify(result),\n    }).then((res) => res.json());\n    console.log(\"@@@@@@@@@@@@@\", fetchData);\n    // //バックエンド開放後\n    setValue([...value, ...fetchData]);\n\n    setShow(false);\n  };\n\n  if (show) {\n    return (\n      <div id=\"overlay\">\n        <div id=\"content\">\n          <form onSubmit={handleSubmit} className=\"Modal_form\">\n            <h1>NEW POST</h1>\n            <div>\n              <input\n                ref={inputRef}\n                type=\"text\"\n                name=\"title\"\n                id=\"title\"\n                placeholder=\" Title\"\n                required\n              />\n            </div>\n\n            <div>\n              <input\n                type=\"text\"\n                list=\"list\"\n                name=\"tag\"\n                id=\"tag\"\n                placeholder=\" Tag\"\n              />\n              <datalist id=\"list\">\n                {tagList.map((elem, index) => (\n                  <option value={elem} key={index} />\n                ))}\n              </datalist>\n            </div>\n            <div>\n              <input\n                type=\"text\"\n                name=\"keyword\"\n                id=\"keyword\"\n                placeholder=\" Keyword\"\n              />\n            </div>\n            <div>\n              <input type=\"text\" name=\"url\" id=\"url\" placeholder=\" URL\" />\n            </div>\n            <button type=\"submit\">POST</button>\n            <button onClick={() => setShow(false)}>CLOSE</button>\n          </form>\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default Modal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}