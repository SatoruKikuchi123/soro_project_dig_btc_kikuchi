{"ast":null,"code":"var _jsxFileName = \"/Users/user/BTC/NEW-Green-Field/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport \"./Reset.css\";\nimport Header from \"./components/Header\";\nimport Modal from \"./components/Modal\";\nimport SearchList from \"./components/SearchList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // valueは全てのテーブル情報を格納\n  const [value, setValue] = useState([]);\n  const [tagList, setTagList] = useState([]);\n  const [imgList, setImgList] = useState([\"css\", \"express\", \"html\", \"javascript\", \"knex\", \"nodejs\", \"postgresql\", \"postman\", \"typescript\", \"git\", \"react\"]);\n  const [filterValue, setFilterValue] = useState([]);\n  const [loginFlag, setLoginFlag] = useState(true);\n  useEffect(() => {\n    (async () => {\n      const fetchData = await fetch(\"http://localhost:8000/list\");\n      const jsonData = await fetchData.json();\n      //html nodelistはforEachでしか回せないなぜなら戻り値がないので元の形を変えない :(useStateの使い方が分からなかった,react,react 公式ドキュメント,2023-05-01)\n      jsonData.forEach(element => {\n        const result = `${element.title},${element.tag},${element.keyword},${element.postedDate}`;\n        //フリーキーワード検索でヒットさせやすくするためAllキーを新たに追加しそこにカンマで繋いだ上の文字列を小文字にしたものを格納　:(All: \"usestateの使い方が分からなかった,react,react 公式ドキュメント,2023-05-01\")\n        element.All = result.toLowerCase();\n      });\n      setValue(jsonData);\n    })();\n  }, []);\n\n  //valueが変わるたびにレンダリング\n  useEffect(() => {\n    //tagを小文字にして配列に格納:(5) ['react', 'postgresql', 'git', 'typescript', 'treact, express']\n    const arrMap = value.map(elem => {\n      return elem.tag.toLowerCase();\n    });\n    //タグの配列から重複を削除したsetオブジェクトを作成: Set(5) {'react', 'postgresql', 'git', 'typescript', 'treact, express'}\n    const set = new Set(arrMap);\n    //タグリストを更新 tagList:(6) ['All', 'react', 'postgresql', 'git', 'typescript', 'treact, express']\n    setTagList([\"All\", ...Array.from(set)]);\n    console.log(\"////////////\", tagList);\n    value.forEach(element => {\n      const result = `${element.title},${element.tag},${element.keyword},${element.postedDate}`;\n      element.All = result.toLowerCase();\n    });\n    setFilterValue(value);\n  }, [value]);\n  const [show, setShow] = useState(false);\n  const openModal = () => {\n    setShow(true);\n  };\n  const inputRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      setShow: setShow,\n      tagList: tagList,\n      inputRef: inputRef,\n      setValue: setValue,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      tagList: tagList,\n      setTagList: setTagList,\n      openModal: openModal,\n      setFilterValue: setFilterValue,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchList, {\n      filterValue: filterValue,\n      imgList: imgList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"X9iUNC79OorwDBcJuP7/J6grXLU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useRef","useState","Header","Modal","SearchList","jsxDEV","_jsxDEV","App","_s","value","setValue","tagList","setTagList","imgList","setImgList","filterValue","setFilterValue","loginFlag","setLoginFlag","fetchData","fetch","jsonData","json","forEach","element","result","title","tag","keyword","postedDate","All","toLowerCase","arrMap","map","elem","set","Set","Array","from","console","log","show","setShow","openModal","inputRef","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user/BTC/NEW-Green-Field/src/App.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport \"./Reset.css\";\nimport Header from \"./components/Header\";\nimport Modal from \"./components/Modal\";\nimport SearchList from \"./components/SearchList\";\nimport { table } from \"./globals\";\n\nfunction App() {\n  // valueは全てのテーブル情報を格納\n  const [value, setValue] = useState<table[]>([]);\n  const [tagList, setTagList] = useState<string[]>([]);\n  const [imgList, setImgList] = useState<string[]>([\n    \"css\",\n    \"express\",\n    \"html\",\n    \"javascript\",\n    \"knex\",\n    \"nodejs\",\n    \"postgresql\",\n    \"postman\",\n    \"typescript\",\n    \"git\",\n    \"react\",\n  ]);\n  const [filterValue, setFilterValue] = useState<table[]>([]);\n  const [loginFlag, setLoginFlag] = useState<boolean>(true);\n\n  useEffect(() => {\n    (async () => {\n      const fetchData = await fetch(\"http://localhost:8000/list\");\n      const jsonData = await fetchData.json();\n      //html nodelistはforEachでしか回せないなぜなら戻り値がないので元の形を変えない :(useStateの使い方が分からなかった,react,react 公式ドキュメント,2023-05-01)\n      jsonData.forEach((element: any) => {\n        const result = `${element.title},${element.tag},${element.keyword},${element.postedDate}`;\n        //フリーキーワード検索でヒットさせやすくするためAllキーを新たに追加しそこにカンマで繋いだ上の文字列を小文字にしたものを格納　:(All: \"usestateの使い方が分からなかった,react,react 公式ドキュメント,2023-05-01\")\n        element.All = result.toLowerCase();\n      });\n      setValue(jsonData);\n    })();\n  }, []);\n\n  //valueが変わるたびにレンダリング\n  useEffect(() => {\n    //tagを小文字にして配列に格納:(5) ['react', 'postgresql', 'git', 'typescript', 'treact, express']\n    const arrMap = value.map((elem) => {\n      return elem.tag.toLowerCase();\n    });\n    //タグの配列から重複を削除したsetオブジェクトを作成: Set(5) {'react', 'postgresql', 'git', 'typescript', 'treact, express'}\n    const set = new Set(arrMap);\n    //タグリストを更新 tagList:(6) ['All', 'react', 'postgresql', 'git', 'typescript', 'treact, express']\n    setTagList([\"All\", ...Array.from(set)]);\n    console.log(\"////////////\", tagList);\n\n    value.forEach((element: any) => {\n      const result = `${element.title},${element.tag},${element.keyword},${element.postedDate}`;\n      element.All = result.toLowerCase();\n    });\n\n    setFilterValue(value);\n  }, [value]);\n\n  const [show, setShow] = useState<boolean>(false);\n  const openModal = () => {\n    setShow(true);\n  };\n\n  const inputRef = useRef(null);\n\n  return (\n    <div className=\"App\">\n      {/* newPost画面 Modal=副ウインドウ */}\n      <Modal\n        show={show}\n        setShow={setShow}\n        tagList={tagList}\n        inputRef={inputRef}\n        setValue={setValue}\n        value={value}\n      />\n      <Header\n        tagList={tagList}\n        setTagList={setTagList}\n        openModal={openModal}\n        setFilterValue={setFilterValue}\n        value={value}\n      />\n      {/* 各カードを表示 */}\n      <SearchList filterValue={filterValue} imgList={imgList} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}