{"ast":null,"code":"var _jsxFileName = \"/Users/user/BTC/NEW-Green-Field/src/components/Modal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useRef } from \"react\";\nimport \"./Modal.css\";\nimport { VariableContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Modal() {\n  _s();\n  const [, setPopup, postedArray, setPostedArray] = useContext(VariableContext);\n  const [postData, setPostData] = useState({\n    title: \"\",\n    tag: \"\",\n    url: \"\",\n    comment: \"\"\n  });\n  const htmlRef = useRef(null);\n  const today = new Date();\n  const newPost = async () => {\n    const {\n      comment,\n      ...newData\n    } = {\n      ...postData,\n      id: Math.max(...postedArray.map(e => e.id)) + 1,\n      \"post-date\": `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, \"0\")}-${String(today.getDate()).padStart(2, \"0\")}`,\n      \"p-user-id\": 10001\n    };\n    const response = await fetch(`http://localhost:3333/posted`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newData)\n    }).then(e => e.json());\n    setPostedArray(response);\n    setPopup(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popUpBack\",\n    ref: htmlRef,\n    onClick: e => {\n      e.target === htmlRef.current && setPopup(false);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u2728NEW Article\\u2728\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        value: postData.title,\n        onChange: e => setPostData({\n          ...postData,\n          [e.target.name]: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        list: \"tags\",\n        name: \"tag\",\n        placeholder: \"Tag\",\n        value: postData.tag,\n        onChange: e => setPostData({\n          ...postData,\n          [e.target.name]: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"tags\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dummy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dummy2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dummy3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"comment\",\n        placeholder: \"review comment\",\n        onChange: e => setPostData({\n          ...postData,\n          [e.target.name]: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"url\",\n        name: \"url\",\n        placeholder: \"URL\",\n        value: postData.url,\n        onChange: e => setPostData({\n          ...postData,\n          [e.target.name]: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonArea\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: newPost,\n          children: \"POST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setPopup(false);\n          },\n          children: \"CLOSE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Modal, \"oxPWX6FYvyunVka8Iu2gJbTEo64=\");\n_c = Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","useContext","useRef","VariableContext","jsxDEV","_jsxDEV","Modal","_s","setPopup","postedArray","setPostedArray","postData","setPostData","title","tag","url","comment","htmlRef","today","Date","newPost","newData","id","Math","max","map","e","getFullYear","String","getMonth","padStart","getDate","response","fetch","method","headers","body","JSON","stringify","then","json","className","ref","onClick","target","current","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","value","onChange","required","list","_c","$RefreshReg$"],"sources":["/Users/user/BTC/NEW-Green-Field/src/components/Modal.tsx"],"sourcesContent":["import React, { useState, useContext, useRef } from \"react\";\nimport \"./Modal.css\";\nimport { VariableContext } from \"../App\";\n\nexport default function Modal() {\n  const [, setPopup, postedArray, setPostedArray] = useContext(VariableContext);\n  const [postData, setPostData] = useState({\n    title: \"\",\n    tag: \"\",\n    url: \"\",\n    comment: \"\",\n  });\n  const htmlRef = useRef<HTMLDivElement>(null);\n  const today = new Date();\n\n  const newPost = async () => {\n    const { comment, ...newData } = {\n      ...postData,\n      id: Math.max(...postedArray.map((e) => e.id)) + 1,\n      \"post-date\": `${today.getFullYear()}-${String(\n        today.getMonth() + 1\n      ).padStart(2, \"0\")}-${String(today.getDate()).padStart(2, \"0\")}`,\n      \"p-user-id\": 10001,\n    };\n    const response = await fetch(`http://localhost:3333/posted`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newData),\n    }).then((e) => e.json());\n    setPostedArray(response);\n    setPopup(false);\n  };\n\n  return (\n    <div\n      className=\"popUpBack\"\n      ref={htmlRef}\n      onClick={(e) => {\n        e.target === htmlRef.current && setPopup(false);\n      }}\n    >\n      <section>\n        <h1>✨NEW Article✨</h1>\n        {/* タイトル */}\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          value={postData.title}\n          onChange={(e: any) =>\n            setPostData({ ...postData, [e.target.name]: e.target.value })\n          }\n          required\n        />\n        {/* タグ選択 */}\n        <input\n          list=\"tags\"\n          name=\"tag\"\n          placeholder=\"Tag\"\n          value={postData.tag}\n          onChange={(e: any) =>\n            setPostData({ ...postData, [e.target.name]: e.target.value })\n          }\n        />\n        <datalist id=\"tags\">\n          <option value=\"dummy\"></option>\n          <option value=\"dummy2\"></option>\n          <option value=\"dummy3\"></option>\n        </datalist>\n        {/* コメント */}\n        <input\n          type=\"text\"\n          name=\"comment\"\n          placeholder=\"review comment\"\n          onChange={(e: any) =>\n            setPostData({ ...postData, [e.target.name]: e.target.value })\n          }\n        />\n        <input\n          type=\"url\"\n          name=\"url\"\n          placeholder=\"URL\"\n          value={postData.url}\n          onChange={(e: any) =>\n            setPostData({ ...postData, [e.target.name]: e.target.value })\n          }\n        />\n        {/* ボタン */}\n        <div className=\"buttonArea\">\n          <button onClick={newPost}>POST</button>\n          <button\n            onClick={() => {\n              setPopup(false);\n            }}\n          >\n            CLOSE\n          </button>\n        </div>\n      </section>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}